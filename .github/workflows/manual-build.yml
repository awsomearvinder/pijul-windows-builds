# This is a basic workflow to help you get started with Actions

name: Manual Build

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Install vcpkg deps
        shell: bash
        run: |
          $VCPKG_INSTALLATION_ROOT/vcpkg.exe install --triplet=x64-windows-static-md xxhash zstd openssl openssl-windows
          cd $VCPKG_INSTALLATION_ROOT/installed/x64-windows-static-md/lib
          cp zstd_static.lib zstd.lib
          
      - name: Set env vars
        shell: bash
        run: |
          export VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT
          export LIB=$VCPKG_ROOT/installed/x64-windows-static-md/lib
          export OPENSSL_DIR=$VCPKG_ROOT/installed/x64-windows-static-md
      
      - name: Build pijul with git feature
        shell: bash
        run: |
          cargo install pijul --version "~1.0.0-alpha" --root . --features git
          mv bin/pijul.exe bin/pijul-git.exe
      # Runs a set of commands using the runners shell
      - name: Build pijul
        shell: bash
        run: cargo install pijul --version "~1.0.0-alpha" --root .
      
      # Upload the compiled binary
      - uses: actions/upload-artifact@v2
        with:
          name: pijul.exe
          path: bin/pijul.exe
            # Upload the compiled binary
      - uses: actions/upload-artifact@v2
        with:
          name: pijul_git.exe
          path: bin/pijul_git.exe
        
